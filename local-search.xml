<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Arthas技巧</title>
    <link href="/2021/12/07/Arthas%E6%8A%80%E5%B7%A7/"/>
    <url>/2021/12/07/Arthas%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h3 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h3><ul><li>dashboard<ul><li>-i 实时数据的时间间隔，默认5000ms,</li><li>-n 刷新实时数据的次数<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">dashboard</span> -i <span class="hljs-number">5000</span> -n <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><ul><li>thread <ul><li>-n 指定最忙的前N个线程并打印堆栈</li><li>-b 找出当前线程阻塞其他线程的线程</li></ul></li></ul><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-keyword">thread</span> -n <span class="hljs-number">3</span><br><span class="hljs-keyword">thread</span> -b<br><span class="hljs-keyword">thread</span> <span class="hljs-number">51</span><br></code></pre></td></tr></table></figure><ul><li><p>jvm(查看jvm参数)</p></li><li><p>sysprop(当前jvm的系统属性)</p></li><li><p>sysenv(当前jvm的环境属性)</p></li><li><p>vmoption(查看，更新jvm诊断相关的参数)</p></li><li><p>perfcounter(查看当前jvm的Perf Counter信息)</p></li><li><p>logger(查看该进程下的logger相关信息)</p><ul><li>更新日志级别<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">logger</span> -n kl --level <span class="hljs-literal">debug</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>mbean</p></li><li><p>getstatic(查看类的静态属性,支持ognl表达式)</p></li><li><p>ognl(<a href="https://commons.apache.org/proper/commons-ognl/language-guide.html">https://commons.apache.org/proper/commons-ognl/language-guide.html</a>)</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs llvm">ognl &#x27;#value<span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-title">@System</span><span class="hljs-title">@getProperty</span>(<span class="hljs-string">&quot;java.home&quot;</span>)<span class="hljs-punctuation">,</span> #value<span class="hljs-number">2</span><span class="hljs-operator">=</span><span class="hljs-title">@System</span><span class="hljs-title">@getProperty</span>(<span class="hljs-string">&quot;java.runtime.name&quot;</span>)<span class="hljs-punctuation">,</span> &#123;#value<span class="hljs-number">1</span><span class="hljs-punctuation">,</span> #value<span class="hljs-number">2</span>&#125;&#x27;<br><span class="hljs-title">@ArrayList</span>[<br>    <span class="hljs-title">@String</span>[/opt/java/<span class="hljs-number">8.0</span>.<span class="hljs-number">181</span>-zulu/jre]<span class="hljs-punctuation">,</span><br>    <span class="hljs-title">@String</span>[OpenJDK Runtime Environment]<span class="hljs-punctuation">,</span><br>]<br></code></pre></td></tr></table></figure></li><li><p>sc(查看已加载的类信息)</p><ul><li>-d 输出当前类的详细信息</li><li>-f 输出当前类的成员变量信息</li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">sc</span> <span class="hljs-literal">-d</span> <span class="hljs-operator">-f</span> kl.cdsm2.web.MainApp<br></code></pre></td></tr></table></figure><ul><li>sm(查看已加载类的方法信息)<ul><li>-d 展示每个方法的详细信息</li></ul></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">sm -d kl<span class="hljs-selector-class">.cdsm2</span><span class="hljs-selector-class">.web</span><span class="hljs-selector-class">.MainApp</span> <span class="hljs-selector-attr">[init]</span><br></code></pre></td></tr></table></figure><ul><li>dump(已加载的bytecode 到指定目录)</li><li>heapdump(类似于jmap的heap dump功能)</li><li>vmtool(采用JVMTI接口查看内存对象，强制GC)<ul><li>JVMTI接口（<a href="https://docs.oracle.com/javase/8/docs/platform/jvmti/jvmti.html%EF%BC%89">https://docs.oracle.com/javase/8/docs/platform/jvmti/jvmti.html）</a></li><li>–action 后接需要指定的命令</li><li>getInstances (-x/–expand) </li></ul></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vmtool --action getInstances --className kl<span class="hljs-selector-class">.cdsm2</span><span class="hljs-selector-class">.config</span><span class="hljs-selector-class">.ApiServiceCfg</span> -x <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><ul><li><p>jad(反编译指定已加载类的源码)</p></li><li><p>classloader(查看类加载信息)</p><ul><li>–load 使用类加载去加载类信息</li><li>-t 查看继承树</li><li>-c 查看URLClassloader实际的urls</li></ul></li><li><p>mc (编译.java 文件生成.class)</p></li><li><p>retransform/redefine(加载外部的.class文件，retransform/redefine jvm已加载的类)</p><ul><li>不允许新增加field/method</li><li>正在跑的函数，没有退出不能生效。</li></ul></li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs gradle">结合 jad/mc 命令使用<br>jad --<span class="hljs-keyword">source</span>-only com.example.demo.arthas.user.UserController &gt; <span class="hljs-regexp">/tmp/U</span>serController.java<br> <br>mc <span class="hljs-regexp">/tmp/U</span>serController.java -d /tmp<br> <br>retransform <span class="hljs-regexp">/tmp/</span>com<span class="hljs-regexp">/example/</span>demo<span class="hljs-regexp">/arthas/u</span>ser/UserController.<span class="hljs-keyword">class</span><br><br>使用mc命令来编译jad的反编译的代码有可能失败。可以在本地修改代码，编译好后再上传到服务器上。有的服务器不允许直接上传文件，可以使用base64命令来绕过。<br><br>在本地先转换.<span class="hljs-keyword">class</span>文件为base64，再保存为result.txt<br><br>base64 &lt; Test.<span class="hljs-keyword">class</span> &gt; result.txt<br>到服务器上，新建并编辑result.txt，复制本地的内容，粘贴再保存<br><br>把服务器上的 result.txt还原为.<span class="hljs-keyword">class</span><br><br>base64 -d &lt; result.txt &gt; Test.<span class="hljs-keyword">class</span><br>用md5命令计算哈希值，校验是否一致<br></code></pre></td></tr></table></figure><ul><li><p>monitor(方法执行监控)</p><ul><li>-c 统计周期，默认值为120秒</li></ul></li><li><p>watch(函数执行数据观测)</p><ul><li>-b 函数调用之前观察</li><li>-f 函数调用之后观察</li><li>-s 函数返回之后观察</li><li>-e 函数异常之后观察</li><li>-x 函数深度</li></ul></li><li><p>trace（方法内部调用路径,并输出方法路径上的每个节点上耗时）渲染和统计整个调用链路上的所有性能开销和追踪调用链路</p><ul><li>-n 次数</li><li>–skipJDKMethod false default true</li><li>‘#cost &gt; 10’展示耗时大于10ms的调用路径，有利于排查问题</li></ul></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">trace kl<span class="hljs-selector-class">.cdsm2</span><span class="hljs-selector-class">.service</span><span class="hljs-selector-class">.apisvr</span><span class="hljs-selector-class">.biz</span><span class="hljs-selector-class">.cert</span><span class="hljs-selector-class">.CertIssueApplyHandler</span> handleBiz<br>trace kl<span class="hljs-selector-class">.cdsm2</span><span class="hljs-selector-class">.service</span><span class="hljs-selector-class">.apisvr</span><span class="hljs-selector-class">.biz</span><span class="hljs-selector-class">.cert</span><span class="hljs-selector-class">.CertIssueApplyHandler</span> handleBiz <span class="hljs-string">&#x27;#cost&gt;10&#x27;</span><br></code></pre></td></tr></table></figure><ul><li>stack(输出当前方法被调用的调用路径)，使用方法通trace</li><li>tt（方法执行数据的时空隧道，记录下指定方法每次调用的入参和返回信息，并能对这些不同的时间下调进行观测，timetunnel）<ul><li>-t 记录方法每次的指定情况</li><li>-n 3 当你执行一个调用量不高的方法可能你还能有足够的时间用ctrl C 中断，如果遇到调用量非常大的方法，瞬间就把你的JVM内存撑爆。</li><li>-l 查看时空隧道，检索调用记录</li><li>-i index 编号 查看详细信息</li><li>-p 重做一次调用</li></ul></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">tt -t kl<span class="hljs-selector-class">.cdsm2</span><span class="hljs-selector-class">.service</span><span class="hljs-selector-class">.apisvr</span><span class="hljs-selector-class">.biz</span><span class="hljs-selector-class">.cert</span><span class="hljs-selector-class">.CertIssueApplyHandler</span> handleBiz<br>tt -l<br>tt -s <span class="hljs-string">&#x27;method.name==&quot;handleBiz&quot;&#x27;</span><br>tt -<span class="hljs-selector-tag">i</span> <span class="hljs-number">1000</span> -p<br></code></pre></td></tr></table></figure><ul><li>profiler 支持生成应用热点的火焰图。本质上是通过不断的采样，然后把收集的采样结果生成火焰图</li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">profiler</span> start<br><span class="hljs-keyword">profiler</span> status<br><span class="hljs-keyword">profiler</span> stop --<span class="hljs-keyword">format</span> html<br></code></pre></td></tr></table></figure><ul><li>base64</li><li>tee</li><li>auth</li></ul>]]></content>
    
    
    <categories>
      
      <category>jvm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>jvm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql索引与数据结构</title>
    <link href="/2021/12/07/mysql%E7%B4%A2%E5%BC%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <url>/2021/12/07/mysql%E7%B4%A2%E5%BC%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
